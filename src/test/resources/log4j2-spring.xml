<?xml version="1.0" encoding="UTF-8"?>
<!--设置log4j2的自身log级别为warn-->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，
    当设置成trace时，你会看到log4j2内部各种详细输出。可以设置成OFF（关闭）或ERROR（只输出错误信息）-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->

<configuration status="warn" monitorInterval="30">

    <!--日志文件目录、压缩文件目录、日志格式配置-->
    <properties>
        <property name="fileName">D:\spring-boot2-demo/log</property>
        <property name="fileGz">D:\spring-boot2-demo/log/7z</property>
        <property name="PID">????</property>
        <property name="LOG_PATTERN">%clr{%d{yyyy-MM-dd HH:mm:ss.SSS}}{faint} %clr{%5p} %clr{${sys:PID}}{magenta} %clr{---}{faint} %clr{[%15.15t]}{faint} %clr{%-40.40c{1.}}{cyan} %clr{:}{faint} %m%n%xwEx</property>
    </properties>

    <!--先定义所有的appender-->
    <appenders>

        <!--这个输出控制台日志的配置-->
        <console name="console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--输出日志的格式-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <!--<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>-->
        </console>

        <!--打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingRandomAccessFile name="infoFile" fileName="${fileName}/web-info.log" immediateFlush="true"
                                 filePattern="${fileGz}/$${date:yyyy-MM}/%d{yyyy-MM-dd}-%i.web-info.gz">
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="15 MB"/>
            </Policies>
            <Filters>
                <!--只记录info和warn级别信息-->
                <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <!--指定每天的最大压缩包个数，默认7个，超过了会覆盖之前的-->
            <DefaultRolloverStrategy max="30"/>
        </RollingRandomAccessFile>


        <!--存储所有error信息-->
        <RollingRandomAccessFile name="errorFile" fileName="${fileName}/web-error.log" immediateFlush="true"
                                 filePattern="${fileGz}/$${date:yyyy-MM}/%d{yyyy-MM-dd}-%i.web-error.gz">
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="30 MB"/>
            </Policies>
            <Filters>
                <!--只记录error级别信息-->
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <!--指定每天的最大压缩包个数，默认7个，超过了会覆盖之前的 -->
            <DefaultRolloverStrategy max="30"/>

        </RollingRandomAccessFile>

        <NoSql name="databaseAppender">
            <MongoDb databaseName="dnmongodbt" collectionName="cnmongodbt" server="localhost" port="27017"/>
        </NoSql>

    </appenders>


    <!--Mixed sync/async-->
    <loggers>
        <!--<root level="debug" includeLocation="true">
            <appenderRef ref="console"/>
            <appenderRef ref="infoFile"/>
            <appenderRef ref="errorFile"/>
        </root>-->
        <!--过滤掉spring和hibernate的一些无用的debug信息 -->
        <logger name="org.springframework" level="INFO">
        </logger>
        <logger name="org.hibernate" level="INFO">
        </logger>
        <!--additivity="false" 不继承父类的日志输出打印-->
        <AsyncLogger name="AsyncLogger" level="debug" includeLocation="true">
            <AppenderRef ref="databaseAppender"/>
        </AsyncLogger>
        <AsyncRoot level="debug" includeLocation="true">
            <AppenderRef ref="console"/>
            <AppenderRef ref="infoFile"/>
            <AppenderRef ref="errorFile"/>
        </AsyncRoot>
    </loggers>

</configuration>